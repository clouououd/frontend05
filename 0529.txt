[morgan 모듈]
1. 서버의 기록을 남기기 위해 사용 > 서버의 이동경로, 에러 확인을 위해 사용, 터미널에 출력됨
2. dev 속성 : 개발시 사용되도록 설정

express.json()
1. request의 content Type(요청보내는 데이터의 형식)이 json인 경우만 파싱하는 미들웨어를 반환

파싱
문자열 데이터를 분석 및 분해하여 목적한 패턴에 맞게 문자열 구조를 결정하는 것

미들웨어
원만한 통신이 이루어질 수 있게 도와주는 소프트웨어

urlencoded({extended:false})
요청 데이터 형식으로 쿼리 스트링 방식을 사용하기 위해, extended:false 이여야 내장된 쿼리스트링모듈을 사용한다.

-----------------------------------------------------------------------------------------------------------------------------
쿠키
브라우저 로컬에 저장되는 키와 값이 들어있는 작은 데이터 파일
사용자가 인증 유효기간을 명시 가능, 유효 시간이 정해지면 브라우저 종료후에도 유지됨
최대 300개의 쿠키를 저장할 수 있고, 하나당 4kb까지 저장
ex)아이디, 비밀번호 저장/ 자동로그인 / 팝업창(오늘 더 이상 창을 보지 않음) / 쇼핑몰 장바구니

세션
쿠키 기반
서버측에서 관리 > 쿠키보다 보안이 좋지만, 동접자 수가 많으면 서버에 과부하를 주게 된다.
서버에서 사용자를 구분하기 위해 각각 세션 id를 부여
웹브라우저가 서버에 접속해서 종료할때까지 인증상태를 유지
일정 시간 이상 정보가 유지되지 않게 설정이 가능
ex) 로그인 정보 저장

-----------------------------------------------------------------------------------------------------------------------------
웹 스토리지
1. 쿠키의 단점을 보완
2. 로컬 스토리지와 세션스토리지가 있음
3. 백엔드 없이 프론트엔드만으로도 사용가능
ex) 장바구니 .... 장바구니의 데이터를 주문페이지에서 호출해야할때, 데이터베이스를 거치지 않아도 될때

로컬스토리지 사용
localstorage.setItem("키","값");
localstorage.getItem("키");

로컬스토리지
브라우저가 종료되어도 데이터를 영구적으로 저장

세션스토리지
브라우저 닫히는 경우 데이터 삭제

-----------------------------------------------------------------------------------------------------------------------------
cookie-parser
쿠키 모듈
설치> npm i cookie-parser

express-session
세션 모듈
설치> npm i express-session


